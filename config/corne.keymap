/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layers

#define QWE 0
#define MED 1
#define NAV 2
#define BTO 3
#define SYM 4
#define NUM 5
#define FUN 6
#define BTN 7

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <180>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <180>;
};

/ {
		behaviors {
			am: alpha_mods {
				compatible = "zmk,behavior-hold-tap";
				label = "ALPHA_MT";
				#binding-cells = <2>;
				tapping-term-ms = <250>;
				quick-tap-ms = <150>;
				flavor = "tap-preferred";
				bindings = <&kp>, <&kp>;
			};
			as: alpha_shift {
				compatible = "zmk,behavior-hold-tap";
				label = "ALPHA_SFT";
				#binding-cells = <2>;
				tapping-term-ms = <200>;
				quick-tap-ms = <150>;
				flavor = "tap-preferred";
				bindings = <&kp>, <&kp>;
			};
		};
		macros {
			vimux_p: vimux_p {
				label = "VIMUX_P";
				compatible = "zmk,behavior-macro";
				#binding-cells = <0>;
				wait-ms = <40>;
				tap-ms = <40>;
				bindings
					= <&kp BSLH &kp V &kp P>
					;
			};
			vimux_r: vimux_r {
				label = "VIMUX_R";
				compatible = "zmk,behavior-macro";
				#binding-cells = <0>;
				wait-ms = <40>;
				tap-ms = <40>;
				bindings
					= <&kp BSLH &kp R>
					;
			};
			vimux_c: vimux_c {
				label = "VIMUX_C";
				compatible = "zmk,behavior-macro";
				#binding-cells = <0>;
				wait-ms = <40>;
				tap-ms = <40>;
				bindings
					= <&kp BSLH &kp C>
					;
			};
			tmux_pp: tmux_pp {
				label = "TMUX_PP";
				compatible = "zmk,behavior-macro";
				#binding-cells = <0>;
				wait-ms = <40>;
				tap-ms = <40>;
				bindings
					= <&macro_press &kp LCTRL>
					, <&macro_tap &kp B>
					, <&macro_release &kp LCTRL>
					, <&macro_tap &kp P>
					;
			};
			tmux_pn: tmux_pn {
				label = "TMUX_PN";
				compatible = "zmk,behavior-macro";
				#binding-cells = <0>;
				wait-ms = <40>;
				tap-ms = <40>;
				bindings
					= <&macro_press &kp LCTRL>
					, <&macro_tap &kp B>
					, <&macro_release &kp LCTRL>
					, <&macro_tap &kp O>
					;
			};
		};
		keymap {
				compatible = "zmk,keymap";

				default_layer {
					label = "DEF";
					bindings = <
   &trans     &kp Q        &kp W           &kp E           &kp R           &kp T                   &kp Y            &kp U          &kp I          &kp O         &kp P             &trans
   &trans     &am LCTRL A  &am LALT S      &am LGUI D      &as LSHFT F     &kp G                   &kp H            &as RSHFT J    &am RGUI K     &am RALT L    &am RCTRL APOS    &trans
   &trans     &lt BTO Z    &kp X           &kp C           &kp V           &kp B                   &kp N            &kp M          &kp COMMA      &kp DOT       &lt BTN FSLH      &trans
						                   &am LSHFT ESC   &lt NAV SPACE   &lt MED TAB             &lt SYM RET    &lt NUM BSPC     &lt FUN SEMI
					>;
				};

				media_layer {
					label = "MED";
					bindings = <
   &trans     &trans        &trans           &trans           &trans           &trans                   &trans        &trans          &trans          &trans         &trans          &trans
   &trans     &kp LCTRL     &kp LALT         &kp LGUI         &kp LSHFT        &trans                   &kp C_PREV    &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT     &trans          &trans
   &trans     &trans        &trans           &trans           &trans           &trans                   &trans        &trans          &trans          &trans         &trans          &trans
							                 &trans           &trans           &trans                   &trans        &kp C_PP        &kp K_MUTE
					>;
				};

				navigation_layer {
					label = "NAV";
					bindings = <
   &trans     &trans        &trans           &trans           &trans           &trans                   &kp CAPS      &trans          &trans          &trans         &trans          &trans
   &trans     &kp LCTRL     &kp LALT         &kp LGUI         &kp LSHFT        &trans                   &kp LEFT      &kp DOWN        &kp UP          &kp RIGHT      &trans          &trans
   &trans     &trans        &trans           &trans           &trans           &trans                   &kp HOME      &kp PG_DN       &kp PG_UP       &kp END        &trans          &trans
							                 &trans           &trans           &trans                   &trans        &trans          &trans
					>;
				};

				bluetooth_layer {
					label = "BTO";
					bindings = <
   &trans     &reset        &trans           &trans           &trans           &trans                   &bt BT_CLR    &trans          &trans          &trans         &reset          &trans
   &trans     &kp LCTRL     &kp LALT         &kp LGUI         &kp LSHFT        &trans                   &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3   &trans          &trans
   &trans     &trans        &trans           &trans           &trans           &trans                   &trans        &trans          &trans          &out OUT_USB   &out OUT_BLE    &trans
							                 &trans           &trans           &trans                   &trans        &trans          &trans
					>;
				};

				symbols_layer {
					label = "SYM";
					bindings = <
   &trans     &kp LPAR      &kp RPAR         &kp LBRC         &kp RBRC         &kp EXCL                 &trans        &trans          &trans          &trans         &trans          &trans
   &trans     &kp LBKT      &kp RBKT         &kp DLLR         &kp BSLH         &kp PIPE                 &trans        &kp RSHFT       &kp RGUI        &kp RALT       &kp RCTRL       &trans
   &trans     &kp LT        &kp PRCNT        &kp EQUAL        &kp GT           &kp LA(N3)               &trans        &trans          &trans          &trans         &trans          &trans
							                 &trans           &kp SPACE        &trans                   &trans        &trans          &trans
					>;
				};

				numbers_layer {
					label = "NUM";
					bindings = <
   &trans     &kp STAR      &kp N7           &kp N8           &kp N9           &kp PLUS                 &trans        &trans          &trans          &trans         &trans          &trans
   &trans     &kp FSLH      &kp N4           &kp N5           &kp N6           &kp MINUS                &trans        &kp RSHFT       &kp RGUI        &kp RALT       &kp RCTRL       &trans
   &trans     &kp GRAVE     &kp N1           &kp N2           &kp N3           &kp UNDER                &trans        &trans          &trans          &trans         &trans          &trans
							                 &kp N0           &kp SPACE        &kp EQUAL                &trans        &trans          &trans
					>;
				};

				function_layer {
					label = "FUN";
					bindings = <
   &trans     &kp F12     &kp F7           &kp F8           &kp F9           &trans                &trans        &trans          &trans          &trans         &trans          &trans
   &trans     &kp F11     &kp F4           &kp F5           &kp F6           &trans                &trans        &kp RSHFT       &kp RGUI        &kp RALT       &kp RCTRL       &trans
   &trans     &kp F10     &kp F1           &kp F2           &kp F3           &trans                &trans        &trans          &trans          &trans         &trans          &trans
							               &trans           &trans           &trans                &trans        &trans          &trans
					>;
				};

				macro_layer {
					label = "BTN";
					bindings = <
   &trans     &trans       &trans          &trans           &trans           &trans                &trans           &trans           &trans          &trans           &trans          &trans
   &trans     &trans       &trans          &trans           &vimux_p         &tmux_pp              &kp LG(LS(N1))   &kp LG(LS(N2))   &kp LG(LS(N3))  &kp LG(LS(N4))   &trans          &trans
   &trans     &trans       &trans          &vimux_c         &vimux_r         &tmux_pn              &kp LG(LS(N5))   &trans           &trans          &trans           &trans          &trans
							               &trans           &trans           &trans                &trans           &trans           &trans
					>;
				};
		};
};